// try to provide a thinger that will expose header for user editing
var extract = require('./extract_keys.js')
var fs = require('fs')
function dump(filename,obj,callback){
    var keys,keyinfo,writer,now,example
    // go get the header out of obj, format it, and go to dinner
    if( ! Array.isArray(obj) ){
        obj = [obj]
    }

    // these are not the keys I'm looking for
    keys = extract(obj[0])

    // convert keys into an object with params

    keyinfo = keys.map(function(k,idx){
        return {'key':k
                ,'order':idx
                ,'skip':false
               }
    })
    // write it out
    writer = fs.createWriteStream(filename, { encoding: 'utf8' })
    // spit out some help

    now = new Date().toISOString()
    writer.write('// this file was autogenerated ' + now + '\n')
    writer.write('// \n')
    //80 columns: --------------------------------------------------------------------------------
    writer.write('// the following object contains the header row information extracted\n')
    writer.write('// from the passed in object\n')
    writer.write('// \n')
    writer.write('// If you don\'t like what you see, then you can edit it.  One option is \n')
    writer.write('// to set skip to false.  Another is to take a look at the data and present it\n')
    writer.write('// in a different way.  For example, if you have a big data array embedded in\n')
    writer.write('// the object, then you might want to just pass in that data array, not the \n')
    writer.write('// whole object.\n')
    writer.write('// \n')
    writer.write('// Also, you can change what is written in the header row of the dumped CSV.\n')
    writer.write('// Suppose you want to change the name of the column that is currently \n')
    writer.write('// called '+keys[0]+'\n')
    writer.write('// What you do is add a field "header:\'blah blah\'" for that variable.\n')
    writer.write('// So for example:\n')
    example = {'key':keys[0]
               ,'order':0
               ,'skip':false
               ,'header':'blah blah blah'}
    writer.write('// \n')
    writer.write('// '+JSON.stringify(example)+' \n')
    writer.write('// \n')

    writer.end('module.exports=')
    writer.on('finish',function(){
        fs.appendFile(filename,
                      JSON.stringify(keyinfo,null,2),
                      { encoding: 'utf8' },
                      callback)
    })

    return null
}
module.exports=dump
